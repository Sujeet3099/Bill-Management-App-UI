[{"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\index.js":"1","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\App.js":"2","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\constants.js":"5","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js":"6","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\Footer.js":"7","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\Header.js":"8","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\Functionality.js":"9","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\GridPanelSelection.js":"10","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\actions\\action.js":"11","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\reducers\\RootReducer.js":"12","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\reducers\\FunctionalityButtons.js":"13","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\AddDialog.js":"14","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\DeleteDialog.js":"15","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\EditDialog.js":"16","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\reducers\\InvoiceTable.js":"17","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\services\\services.js":"18","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\InvTable.js":"19","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\formatter.js":"20","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\useForm.js":"21","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\formValidator.js":"22","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\MySnackBar.js":"23","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\ViewCorrespondance.js":"24","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\MyTable.js":"25"},{"size":718,"mtime":1616064027130,"results":"26","hashOfConfig":"27"},{"size":1608,"mtime":1616357767042,"results":"28","hashOfConfig":"27"},{"size":5226,"mtime":1589284044061,"results":"29","hashOfConfig":"27"},{"size":1465,"mtime":1616066296949,"results":"30","hashOfConfig":"27"},{"size":1294,"mtime":1616321528856,"results":"31","hashOfConfig":"27"},{"size":6550,"mtime":1610991213040,"results":"32","hashOfConfig":"27"},{"size":1243,"mtime":1589331154773,"results":"33","hashOfConfig":"27"},{"size":1386,"mtime":1615907817867,"results":"34","hashOfConfig":"27"},{"size":5239,"mtime":1616369611823,"results":"35","hashOfConfig":"27"},{"size":1132,"mtime":1616132189556,"results":"36","hashOfConfig":"27"},{"size":3794,"mtime":1616369056022,"results":"37","hashOfConfig":"27"},{"size":287,"mtime":1615978213287,"results":"38","hashOfConfig":"27"},{"size":1530,"mtime":1616363186069,"results":"39","hashOfConfig":"27"},{"size":10226,"mtime":1616485436965,"results":"40","hashOfConfig":"27"},{"size":4584,"mtime":1616489060681,"results":"41","hashOfConfig":"27"},{"size":7500,"mtime":1616403417970,"results":"42","hashOfConfig":"27"},{"size":2417,"mtime":1616489477363,"results":"43","hashOfConfig":"27"},{"size":1897,"mtime":1616367856975,"results":"44","hashOfConfig":"27"},{"size":12072,"mtime":1616492043385,"results":"45","hashOfConfig":"27"},{"size":2191,"mtime":1591529928792,"results":"46","hashOfConfig":"27"},{"size":415,"mtime":1616252452139,"results":"47","hashOfConfig":"27"},{"size":1640,"mtime":1616251320990,"results":"48","hashOfConfig":"27"},{"size":1360,"mtime":1616336916946,"results":"49","hashOfConfig":"27"},{"size":9406,"mtime":1616412807586,"results":"50","hashOfConfig":"27"},{"size":3605,"mtime":1616411269734,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"155lww0",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\index.js",[],["111","112"],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\App.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\constants.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js",["113","114","115","116","117"],"import React, { useState } from 'react';\r\nimport theme, { pxToVh } from '../utils/theme';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Footer from '../components/Footer';\r\nimport { Typography } from '@material-ui/core';\r\nimport { InputBase, TextField, OutlinedInput, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: '1vw',\r\n    paddingRight: '1vw',\r\n  },\r\n  textStyle1: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '2.5vw',\r\n    marginTop: '2vh',\r\n  },\r\n  textStyle2: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '1.5vw',\r\n  },\r\n  textfield: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '1.5vw',\r\n  },\r\n  nameInput: {\r\n    fontSize: '1vw',\r\n    color: '#FFFFFF',\r\n  },\r\n  notchedOutline: { borderWidth: '1px', borderColor: '#5DAAE0 !important' },\r\n  searchBtnStarted: {\r\n    marginTop: '8vh',\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: '#5DAAE0',\r\n    '&:hover': {\r\n      backgroundColor: '#5daae0',\r\n      color: 'white',\r\n    },\r\n  },\r\n  searchBtnDisabled: {\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: 'white !important',\r\n    background: '#FFFFFFa5',\r\n    '&:hover': {\r\n      cursor: 'default',\r\n      backgroundColor: '#FFFFFFa5',\r\n    },\r\n  },\r\n  hellotext: {\r\n    fontSize: '4vw',\r\n    color: '#FFFFFFA6',\r\n    height: '10vh',\r\n  },\r\n  hellotext1: {\r\n    fontSize: '2.5vw',\r\n    marginTop: '5vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext3: {\r\n    fontSize: '1vw',\r\n    marginTop: '5vh',\r\n    padding: '0.5vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext2: {\r\n    fontSize: '1.2vw',\r\n    marginTop: '5vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext4: {\r\n    fontSize: '1.5vw',\r\n    marginTop: '2vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n  },\r\n  searchBtn: {\r\n    marginTop: '2vh',\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: '#5DAAE0',\r\n    '&:hover': {\r\n      backgroundColor: '#5daae0',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CollectorDashboard = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [started, setStarted] = useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleGetStarted = (e) => {\r\n    if (started) setName('');\r\n    setStarted((prev) => !prev);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root} spacing={2} xs={12}>\r\n      <Grid\r\n        container\r\n        style={{ height: '95vh' }}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid\r\n          item\r\n          style={{\r\n            height: started ? '90vh' : '45vh',\r\n            width: started ? '60vw' : '40vw',\r\n            backgroundColor: started ? '' : '#252C48',\r\n            display: 'flex',\r\n          }}\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Typography className={classes.textStyle1}>\r\n            {started ? `Hello ${name}` : 'Hey There !'}\r\n          </Typography>\r\n          <Typography className={classes.textStyle2}>\r\n            {started\r\n              ? ' WELCOME TO SUMMER INTERNSHIP 2021'\r\n              : `What's your name?`}\r\n          </Typography>\r\n          {!started ? (\r\n            <>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n                autoid=\"ship-to-input\"\r\n                type=\"text\"\r\n                style={{ marginTop: '4vh' }}\r\n                value={name}\r\n                onChange={handleNameChange}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.nameInput,\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <Button\r\n                size=\"small\"\r\n                className={classes.searchBtnStarted}\r\n                classes={{ disabled: classes.searchBtnDisabled }}\r\n                disabled={name == ''}\r\n                onClick={handleGetStarted}\r\n              >\r\n                GET STARTED\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  height: '30vh',\r\n                  width: '51vw',\r\n                  marginTop: '5vh',\r\n                  border: 'solid 1px #5daae0',\r\n                }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  className={classes.searchBtn}\r\n                  onClick={handleGetStarted}\r\n                >\r\n                  CLICK HERE TO GET THE COMPLETE SOURCE CODE OF THE PROJECT\r\n                </Button>\r\n                <Button\r\n                  size=\"medium\"\r\n                  className={classes.searchBtn}\r\n                  onClick={handleGetStarted}\r\n                >\r\n                  CLICK HERE TO BRIBE YOUR MODERATOR DURING EVALUATION\r\n                </Button>\r\n\r\n                <Button\r\n                  size=\"medium\"\r\n                  className={classes.searchBtn}\r\n                  onClick={handleGetStarted}\r\n                >\r\n                  CLICK HERE TO GET ALL UPCOMING QUIZ ANSWERS BEFOREHAND\r\n                </Button>\r\n              </div>\r\n              <Typography className={classes.hellotext3}>\r\n                WITH LOTS OF LOVE,\r\n              </Typography>\r\n              <Typography className={classes.hellotext4}>\r\n                Highradius Illuminati\r\n              </Typography>\r\n              <Typography className={classes.hellotext2}>\r\n                THE ILLUMINATI WILL BE THERE WITH YOU ALWAYS...AND WILL HELP YOU\r\n                WHENEVER YOU ARE STUCK. MAY THE FORCE BE WITH YOU\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CollectorDashboard;\r\n",["118","119"],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\Footer.js",["120","121","122"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport theme, { pxToRem } from '../utils/theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw'\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: '100%',\r\n    background: '#252C48',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  titleName: { fontSize: pxToRem(30), color: 'white' },\r\n  subTitleName: {\r\n    fontSize: pxToRem(20),\r\n    color: 'white'\r\n  }\r\n});\r\nfunction Footer(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{\r\n        display: 'flex',\r\n        marginRight: '5px',\r\n        justifyContent: 'flex-end',\r\n        height: \"4.5vh\",\r\n        alignItems: \"flex-end\"\r\n      }}\r\n    >\r\n      <Typography style={{ color: 'white' }}>\r\n        Copyright 2020 Highradius. All Rights Reserved.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Footer);\r\n",["123","124"],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\Header.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\Functionality.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\GridPanelSelection.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\actions\\action.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\reducers\\RootReducer.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\reducers\\FunctionalityButtons.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\AddDialog.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\DeleteDialog.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\EditDialog.js",["125"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n// import { pxToVh, pxToVw } from '../utils/theme';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport {\r\n  OutlinedButton,\r\n  ContainedButton,\r\n  pxToVh,\r\n  pxToVw,\r\n} from '../utils/theme';\r\nimport { editInvoice, removeEditModal } from '../actions/action';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { OutlinedInput, InputLabel, createMuiTheme } from '@material-ui/core';\r\nimport { editData } from './../services/services';\r\nimport { EDIT_INVOICE_URL } from '../utils/constants';\r\nimport MySnackBar from './MySnackBar';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label='close'\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst formLabelsTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiFormLabel: {\r\n      // asterisk: {\r\n      //   color: '#db3131',\r\n      //   '&$error': {\r\n      //     color: '#db3131',\r\n      //   },\r\n      // },\r\n      root: {\r\n        color: '#ffffff',\r\n      },\r\n    },\r\n    OutlinedInput: {\r\n      color: '#ffffff',\r\n    },\r\n  },\r\n});\r\n\r\nconst EditDialog = () => {\r\n  const open = useSelector((state) => state.functional.openEdit);\r\n  const dispatch = useDispatch();\r\n  const selectedData = useSelector((state) => state.invoiceTable.selectedData);\r\n  const responseData = useSelector((state) => state.invoiceTable.responseData);\r\n  const [editInv, setEditInv] = useState({\r\n    total_open_amount: 0,\r\n    notes: '',\r\n    doc_id: '',\r\n  });\r\n  const [resetInv, setResetInv] = useState({});\r\n  const [snackOn, setSnackOn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const doc = responseData.find((item) => item.doc_id === selectedData[0]);\r\n    if (doc !== undefined) {\r\n      setEditInv({\r\n        ...editInv,\r\n        total_open_amount: doc.total_open_amount,\r\n        notes: doc.notes,\r\n        doc_id: selectedData[0],\r\n      });\r\n      setResetInv({\r\n        total_open_amount: doc.total_open_amount,\r\n        notes: doc.notes,\r\n        doc_id: selectedData[0],\r\n      });\r\n    }\r\n  }, [selectedData]);\r\n  const handleClose = () => {\r\n    dispatch(removeEditModal());\r\n  };\r\n  const handleEdit = async () => {\r\n    // var obj = {\r\n    //   ...editInv,\r\n    //   total_open_amount: parseInt(editInv.amount),\r\n    // };\r\n    const res = await editData(EDIT_INVOICE_URL, editInv);\r\n    if (res === true) {\r\n      dispatch(editInvoice(editInv));\r\n\r\n      setTimeout(() => {\r\n        setSnackOn(true);\r\n        handleClose();\r\n        // res = false;\r\n      }, 1500);\r\n    }\r\n  };\r\n  const handleReset = () => {\r\n    setEditInv(resetInv);\r\n  };\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <Dialog\r\n          onClose={handleClose}\r\n          aria-labelledby='customized-dialog-title'\r\n          open={open}\r\n          PaperProps={{\r\n            style: {\r\n              backgroundColor: '#2A3E4C',\r\n              color: '#ffffff',\r\n            },\r\n          }}\r\n        >\r\n          <DialogTitle id='customized-dialog-title' onClose={handleClose}>\r\n            Edit Invoice\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <MuiThemeProvider theme={formLabelsTheme}>\r\n              <Grid container direction='column' justify='space-evenly'>\r\n                <Grid\r\n                  container\r\n                  direction='row'\r\n                  justify='space-between'\r\n                  alignItems='center'\r\n                  style={{ marginTop: pxToVh(30) }}\r\n                >\r\n                  <InputLabel htmlFor='customerNo'>Invoice Amount</InputLabel>\r\n                  <OutlinedInput\r\n                    // error\r\n                    id='invoiceAmount'\r\n                    type='number'\r\n                    value={editInv.total_open_amount}\r\n                    onChange={(e) =>\r\n                      setEditInv({\r\n                        ...editInv,\r\n                        total_open_amount: e.target.value,\r\n                      })\r\n                    }\r\n                    style={{\r\n                      width: pxToVw(300),\r\n                      height: pxToVh(45),\r\n                      marginLeft: pxToVw(30),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  justify='space-between'\r\n                  // alignItems='center'\r\n                  style={{ marginTop: pxToVh(30) }}\r\n                >\r\n                  <InputLabel>Notes</InputLabel>\r\n                  <OutlinedInput\r\n                    rows={4}\r\n                    variant='outlined'\r\n                    value={editInv.notes}\r\n                    onChange={(e) => {\r\n                      setEditInv({ ...editInv, notes: e.target.value });\r\n                    }}\r\n                    multiline\r\n                    style={{\r\n                      width: pxToVw(300),\r\n                      height: pxToVh(191),\r\n                      marginLeft: pxToVw(30),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiThemeProvider>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Grid>\r\n              <Button\r\n                style={{ color: '#14AFF1', textTransform: 'none' }}\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n            <Grid container spacing={1} justify='flex-end'>\r\n              <OutlinedButton autoFocus size='small' onClick={handleReset}>\r\n                Reset\r\n              </OutlinedButton>\r\n            </Grid>\r\n            {/* <Grid item xs={3}> */}\r\n            <ContainedButton size='small' onClick={handleEdit}>\r\n              Save\r\n            </ContainedButton>\r\n            {/* </Grid> */}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n      <MySnackBar\r\n        msg={'Succesfully Edited Invoice'}\r\n        type={'Success'}\r\n        hook={[snackOn, setSnackOn]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditDialog;\r\n","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\reducers\\InvoiceTable.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\services\\services.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\InvTable.js",["126"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport MuiTableCell from '@material-ui/core/TableCell';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeSearchByDocID,\r\n  disableDelete,\r\n  disableEdit,\r\n  enableDelete,\r\n  enableEdit,\r\n  setSelectedData,\r\n  sortedInvoice,\r\n} from './../actions/action';\r\nimport {\r\n  fetchData,\r\n  compareValues,\r\n  fetchDataFirst,\r\n} from './../services/services';\r\nimport { pxToVh, pxToVw } from '../utils/theme';\r\nimport { formatter } from './../utils/formatter';\r\nimport { GET_SEARCH_DATA_URL } from './../utils/constants';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    maxWidth: '98%',\r\n    marginLeft: pxToVw(20),\r\n    marginRight: pxToVw(20),\r\n    marginTop: pxToVh(30),\r\n    marginBottom: pxToVh(30),\r\n    backgroundColor: 'none',\r\n    // overflowX: 'auto',\r\n  },\r\n  tableBody: {\r\n    maxHeight: pxToVh(612),\r\n    // minHeight: pxToVh(612),\r\n  },\r\n  header: {\r\n    backgroundColor: '#2D4350',\r\n    color: '#97A1A9',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n});\r\n\r\nconst TableCell = withStyles({\r\n  root: {\r\n    borderBottom: 'none',\r\n    paddingTop: pxToVh(1),\r\n    paddingBottom: pxToVh(1),\r\n  },\r\n})(MuiTableCell);\r\n\r\nconst InvTable = () => {\r\n  const classes = useStyles();\r\n\r\n  // * Local states\r\n  const [page, setPage] = useState(-1);\r\n  const [isNext, setIsNext] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [allSelected, setAllSelected] = useState(false);\r\n\r\n  // * Global states\r\n  const dispatch = useDispatch();\r\n  const selectedData = useSelector((state) => state.invoiceTable.selectedData);\r\n  const responseData = useSelector((state) => state.invoiceTable.responseData);\r\n  const predictedData = useSelector(\r\n    (state) => state.invoiceTable.predictedData,\r\n  );\r\n  const doc_id = useSelector((state) => state.invoiceTable.searchByDocID);\r\n\r\n  // * Sorting Functionality\r\n  const handleSort = (name) => {\r\n    const newData = [...responseData];\r\n    newData.sort(compareValues(name));\r\n    dispatch(sortedInvoice(newData));\r\n  };\r\n\r\n  // * Selecting All Rows functionality\r\n  const selectAll = () => {\r\n    if (allSelected && setSelectedData.length !== 0) {\r\n      dispatch(setSelectedData([]));\r\n      setAllSelected(!allSelected);\r\n    } else {\r\n      const newSelectedData = responseData.map((item) => item.doc_id);\r\n      dispatch(setSelectedData(newSelectedData));\r\n      setAllSelected(!allSelected);\r\n    }\r\n  };\r\n\r\n  // * selectedOrNot functionality\r\n  const selectedOrNot = (doc) => {\r\n    return selectedData.find((item) => item === doc);\r\n  };\r\n\r\n  const checkSelect = (doc) => {\r\n    if (selectedOrNot(doc) === undefined) {\r\n      const newData = [...selectedData, doc];\r\n      dispatch(setSelectedData(newData));\r\n    } else {\r\n      const newSelectedData = selectedData.filter((item) => item !== doc);\r\n      dispatch(setSelectedData(newSelectedData));\r\n    }\r\n  };\r\n\r\n  // * Parameters for Axios API call\r\n  const params = { doc_id: doc_id, page_no: page, page_limit: 15 };\r\n\r\n  // * Fetchinng DATA\r\n  const fetchMoreData = async () => {\r\n    setIsLoading(true);\r\n    setPage(page + 1);\r\n    // console.log('called', 'Page->', page);\r\n    await fetchData(GET_SEARCH_DATA_URL, params, dispatch);\r\n    setIsLoading(false);\r\n    setIsNext(true);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    dispatch(changeSearchByDocID(''));\r\n  };\r\n  // * Initial Loading of the Data\r\n  useEffect(() => {\r\n    const pg = -1;\r\n    // it is not setting the page to -1 and just keeps on incrementing;\r\n\r\n    // TODO fix this bug\r\n    // ? making it async also did not work;\r\n    // * bug fixed\r\n\r\n    const fun = async () => {\r\n      await setPage(pg);\r\n      await setPage(page + 1);\r\n      // console.log(page);\r\n      fetchDataFirst(GET_SEARCH_DATA_URL, { ...params, page_no: -1 }, dispatch);\r\n    };\r\n    fun();\r\n    setIsNext(true);\r\n  }, [doc_id]);\r\n\r\n  // const isEdit = useSelector((state) => state.functional.isEdit);\r\n  // const isDelete = useSelector((state) => state.functional.isDelete);\r\n  function checkLeapYear(year) {\r\n    //three conditions to find out the leap year\r\n    if ((0 === year % 4 && 0 !== year % 100) || 0 === year % 400) {\r\n      // console.log(year + ' is a leap year');\r\n      return true;\r\n    } else {\r\n      // console.log(year + ' is not a leap year');\r\n      return false;\r\n    }\r\n  }\r\n  const dateIncrement = (str, inc) => {\r\n    var newD = new Date(str);\r\n    var newDM = newD.getMonth();\r\n    var newDD = newD.getDate();\r\n    var newDY = newD.getFullYear();\r\n    // console.log(newDM);\r\n    if ([0, 2, 4, 6, 7, 9, 11].find((n) => n === newDM) !== undefined) {\r\n      newDM += Math.floor((newDD + inc) / 31);\r\n      newDD += inc % 31;\r\n    } else if (newDM === 1) {\r\n      if (checkLeapYear(newDY)) {\r\n        newDM += Math.floor((newDD + inc) / 29);\r\n        newDD += inc % 29;\r\n      } else {\r\n        newDM += Math.floor((newDD + inc) / 28);\r\n        newDD += inc % 28;\r\n      }\r\n    } else {\r\n      newDM += Math.floor((newDD + inc) / 30);\r\n      newDD += inc % 30;\r\n    }\r\n    if (Math.floor(newDM / 11) !== 0) {\r\n      newDY += Math.floor(newDM / 11);\r\n      newDM = 11 - newDM + (newDM % 11);\r\n    }\r\n    newD.setDate(newDD);\r\n    newD.setMonth(newDM);\r\n    newD.setFullYear(newDY);\r\n\r\n    return newD;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedData.length > 1) {\r\n      dispatch(enableDelete());\r\n      dispatch(disableEdit());\r\n    }\r\n    if (selectedData.length === 1) {\r\n      dispatch(enableEdit());\r\n      dispatch(enableDelete());\r\n    }\r\n    if (selectedData.length === 0) {\r\n      dispatch(disableDelete());\r\n      dispatch(disableEdit());\r\n    }\r\n  }, [selectedData, dispatch]);\r\n\r\n  //  * The invoice Table for showing the data we are fetching\r\n  return (\r\n    <>\r\n      {responseData.length === 0 ? (\r\n        <div\r\n          style={{\r\n            background: '#2D4350',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '50vw',\r\n            marginLeft: '25vw',\r\n            marginRigh: 'auto',\r\n          }}\r\n        >\r\n          <ErrorOutlineIcon\r\n            style={{ color: '#FF5B5B', marginTop: pxToVh(150) }}\r\n            fontSize='large'\r\n          />\r\n          <h4>No results found</h4>\r\n          <p>Try adjusting your search to find what you are looking for.</p>\r\n          <Button\r\n            style={{ color: '#14AFF1', textTransform: 'none' }}\r\n            onClick={handleClear}\r\n          >\r\n            Clear Search\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <InfiniteScroll\r\n        dataLength={responseData.length}\r\n        next={() => fetchMoreData()}\r\n        hasMore={isNext}\r\n        scrollableTarget='scrollbarTarget'\r\n        scrollThreshold={0.9}\r\n        loader={\r\n          isLoading ? (\r\n            <div\r\n              style={{\r\n                position: 'static',\r\n                top: '80%',\r\n                height: '90%',\r\n                paddingLeft: '48%',\r\n                overflowY: 'hidden',\r\n              }}\r\n            >\r\n              <CircularProgress />\r\n              <br />\r\n              Loading\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )\r\n        }\r\n        endMessage={\r\n          <div style={{ marginLeft: '44%' }}>*** END OF RESULTS ***</div>\r\n        }\r\n      >\r\n        <Paper className={classes.paper} elevation={0}>\r\n          <TableContainer className={classes.tableBody} id='scrollbarTarget'>\r\n            <Table stickyHeader arial-label='sticky table' size='small'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={classes.header} onClick={selectAll}>\r\n                    <Checkbox />\r\n                  </TableCell>\r\n                  <TableCell className={classes.header}>\r\n                    Customer Name\r\n                  </TableCell>\r\n                  <TableCell className={classes.header}>Customer #</TableCell>\r\n                  <TableCell className={classes.header}>Bill Id</TableCell>\r\n                  <TableCell\r\n                    className={classes.header}\r\n                    onClick={() => handleSort('total_open_amount')}\r\n                  >\r\n                    Invoice Amount\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className={classes.header}\r\n                    onClick={() => handleSort('due_in_date')}\r\n                  >\r\n                    Due Date\r\n                  </TableCell>\r\n                  <TableCell className={classes.header}>{'Delay'}</TableCell>\r\n                  <TableCell className={classes.header}>\r\n                    Predicted Payment date\r\n                  </TableCell>\r\n                  <TableCell className={classes.header}>Notes</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {responseData.map((data, index) => {\r\n                  // console.log(data.document_create_date);\r\n                  // console.log(typeof data.document_create_date);\r\n                  const pred = predictedData.find(\r\n                    (item) => item.doc_id === data.doc_id,\r\n                  );\r\n                  var pre = undefined;\r\n                  if (pred) {\r\n                    pre = parseInt(pred.predictions);\r\n                  }\r\n                  return (\r\n                    <TableRow\r\n                      style={{\r\n                        backgroundColor:\r\n                          index % 2 === 0 ? '#2D4350' : '#283A46',\r\n                      }}\r\n                      key={index}\r\n                    >\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          onClick={() => checkSelect(data.doc_id)}\r\n                          checked={selectedOrNot(data.doc_id) ? true : false}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align='left'>{data.name_customer}</TableCell>\r\n                      <TableCell align='left'>{data.cust_number}</TableCell>\r\n                      <TableCell align='left'>{data.doc_id}</TableCell>\r\n                      <TableCell align='right'>\r\n                        {formatter(data.total_open_amount)}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align='right'\r\n                        style={{\r\n                          color: `${\r\n                            isNaN(pre) ? '' : parseInt(pre) > 0 ? '#FF5B5B' : ''\r\n                          }`,\r\n                        }}\r\n                      >\r\n                        {data.due_in_date}\r\n                      </TableCell>\r\n                      <TableCell align='right'>\r\n                        {pre === undefined ? '--' : Math.round(pre)}\r\n                      </TableCell>\r\n                      <TableCell align='left'>\r\n                        {pre === undefined\r\n                          ? '--'\r\n                          : dateIncrement(data.due_in_date, pre).toDateString()}\r\n                      </TableCell>\r\n                      <TableCell align='left'>{data.notes}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </InfiniteScroll>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvTable;\r\n","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\formatter.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\useForm.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\utils\\formValidator.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\MySnackBar.js",[],"C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\ViewCorrespondance.js",["127"],"import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { pxToVw } from '../utils/theme';\r\nimport { ContainedButton } from './../utils/theme';\r\nimport MyTable from './MyTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { disableCorrs } from '../actions/action';\r\nimport { formatter } from '../utils/formatter';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '&.MuiListItem-root': {\r\n      backgroundColor: '#356680',\r\n      '&:hover': {\r\n        backgroundColor: '283A46',\r\n      },\r\n    },\r\n    '&.Mui-selected': {\r\n      backgroundColor: '#283A46',\r\n      '&:hover': {\r\n        backgroundColor: '#283A46',\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label='close'\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst ViewCorrespondance = () => {\r\n  const handleClose = () => {\r\n    dispatch(disableCorrs());\r\n  };\r\n  const handleDownload = () => {\r\n    // const col = [\r\n    //   'Bill ID',\r\n    //   'Invoice Date',\r\n    //   'Due Date',\r\n    //   'Bill Currency',\r\n    //   'Open Amount($)',\r\n    // ];\r\n    // newData.map((item) => {\r\n    //   const {\r\n    //     doc_id,\r\n    //     document_create_date,\r\n    //     due_in_date,\r\n    //     invoice_currency,\r\n    //     total_open_amount,\r\n    //   } = item;\r\n    //   const row = [\r\n    //     doc_id,\r\n    //     document_create_date,\r\n    //     due_in_date,\r\n    //     invoice_currency,\r\n    //     total_open_amount,\r\n    //   ];\r\n    //   pdfData.push(row);\r\n    //   // return 0;\r\n    // });\r\n    // doc.autoTable(col, pdfData, { startY: 25 });\r\n\r\n    // var idpdf = document.getElementById('forPDF');\r\n    // var doc = new jsPDF({\r\n    //   orientation: 'landscape',\r\n    //   unit: 'px',\r\n    //   // format: [4, 2],\r\n    // });\r\n    var n = newData.length;\r\n    n = Math.round(n / 12);\r\n    // var doc = new jsPDF('p', 'pt', 'a4');\r\n    var doc = new jsPDF('p', 'mm', [1720, 1060]);\r\n    doc.setTextColor('Black');\r\n    // const tmp = template === 'template1' ? template1 : template2;\r\n    // doc.text(tmp, 10, 10);\r\n    while (n) {\r\n      doc.addPage();\r\n      n -= 1;\r\n    }\r\n    // doc.setFillColor('#14AFF1');\r\n    doc.html(\r\n      document.getElementById('forPDF'),\r\n      {\r\n        callback: function (doc) {\r\n          console.log('in callback');\r\n          doc.save('Invoice.pdf');\r\n        },\r\n      },\r\n      5,\r\n      10,\r\n    );\r\n  };\r\n  const open = useSelector((state) => state.functional.openCorrs);\r\n  const dispatch = useDispatch();\r\n  const selectedData = useSelector((state) => state.invoiceTable.selectedData);\r\n  const responseData = useSelector((state) => state.invoiceTable.responseData);\r\n  const newData = responseData.filter((item) =>\r\n    selectedData.find((dt) => dt === item.doc_id),\r\n  );\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  React.useEffect(() => {\r\n    var newAmount = 0;\r\n    newAmount = newData.reduce((sum, item) => {\r\n      sum = sum + item.total_open_amount;\r\n      // console.log(typeof item.total_open_amount);\r\n      return sum;\r\n    }, 0);\r\n\r\n    // console.log(newAmount);\r\n    setTotalAmount(newAmount);\r\n  }, [selectedData]);\r\n  const classes = useStyles();\r\n\r\n  const templates = [\r\n    {\r\n      value: 'template1',\r\n      label: 'template1',\r\n    },\r\n    {\r\n      value: 'template2',\r\n      label: 'template2',\r\n    },\r\n  ];\r\n  const [template, setTemplate] = useState('template1');\r\n  const handleChange = (event) => {\r\n    setTemplate(event.target.value);\r\n  };\r\n  const template1 = `This is to remind you that there are one or more open invoices on your account. lease provide at your earliest convenience an update on the payment details or clarify the reason for the delay. If you have any specific issue with t̥he invoice(s), please let us know so that we can address it to the correct Department.`;\r\n  const template2 = `Gentle reminder that you have one or more open invoices on your account. Please get back to us with an expected date of payment.If you have any specific issue with the invoice(s), please let us know so that we can address it at the earliest. Please find the details of the invoices below:`;\r\n  return (\r\n    <Paper>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: '#2A3E4C',\r\n            paddingLeft: pxToVw(20),\r\n            paddingRight: pxToVw(20),\r\n            color: '#ffffff',\r\n            minWidth: '90vw',\r\n            height: '80vh',\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle id='customized-dialog-title' onClose={handleClose}>\r\n          View Correspondance(2)\r\n          <label\r\n            style={{\r\n              background: '#2A3E4C',\r\n              marginLeft: '50vw',\r\n              marginRight: '2vw',\r\n              color: '#C0C6CA',\r\n              fontSize: '18px',\r\n            }}\r\n          >\r\n            View\r\n          </label>\r\n          <TextField\r\n            id='standard-select-currency'\r\n            select\r\n            variant='filled'\r\n            value={template}\r\n            onChange={handleChange}\r\n          >\r\n            {templates.map((option) => (\r\n              <MenuItem\r\n                key={option.value}\r\n                value={option.value}\r\n                className={classes.root}\r\n              >\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </DialogTitle>\r\n        <DialogContent dividers id='forPDF'>\r\n          <Typography gutterBottom variant='subtitle2'>\r\n            <span style={{ color: '#ffffff' }}>\r\n              <span style={{ color: '#C0C6CA' }}> Subject:</span> Invoice\r\n              Details - {'{Account Name}'}\r\n            </span>\r\n          </Typography>\r\n          <br />\r\n          <Typography gutterBottom variant='subtitle2'>\r\n            <span style={{ color: '#C0C6CA' }}>\r\n              Dear Sir/Madam, <br />\r\n              Greetings! <br />\r\n              <br />\r\n              {template === 'template1' ? template1 : template2}\r\n              <br />\r\n              <br /> Please find the details of the invoices below:\r\n            </span>\r\n          </Typography>\r\n          <MyTable data={newData} />\r\n          <span style={{ color: '#C0C6CA' }}>\r\n            {/* TODO dynamic amount; */}\r\n            Total Amount to be Paid: ${formatter(totalAmount)} <br />\r\n            <br />\r\n            In case you have already made a payment for the above items, please\r\n            send us the details to ensure the payment is posted. Let us know if\r\n            we can be of any further assistance. Looking forward to hearing from\r\n            you. <br />\r\n            <br />\r\n            Kind Regards,\r\n            <br /> Sujeet Kumar <br />\r\n            Phone : 9122812222 <br />\r\n            {/* Fax : [If any] <br /> */}\r\n            Email : 1806439@kiit.ac.in\r\n            <br /> Company Name: HighRadius\r\n          </span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid\r\n            container\r\n            justify='flex-end'\r\n            style={{ marginRight: pxToVw(40) }}\r\n          >\r\n            <Button\r\n              autoFocus\r\n              size='small'\r\n              onClick={handleClose}\r\n              style={{\r\n                color: '#14AFF1',\r\n                textTransform: 'none',\r\n                marginRight: pxToVw(30),\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <ContainedButton size='small' onClick={handleDownload}>\r\n              Download\r\n            </ContainedButton>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ViewCorrespondance;\r\n","C:\\Users\\KIIT\\Documents\\Projects\\Summer_Internship_UI\\src\\components\\MyTable.js",[],["128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"138","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"139","line":7,"column":10,"nodeType":"136","messageId":"137","endLine":7,"endColumn":19},{"ruleId":"134","severity":1,"message":"140","line":7,"column":32,"nodeType":"136","messageId":"137","endLine":7,"endColumn":45},{"ruleId":"141","severity":1,"message":"142","line":172,"column":32,"nodeType":"143","messageId":"144","endLine":172,"endColumn":34},{"ruleId":"130","replacedBy":"145"},{"ruleId":"132","replacedBy":"146"},{"ruleId":"134","severity":1,"message":"147","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":32,"column":11,"nodeType":"136","messageId":"137","endLine":32,"endColumn":18},{"ruleId":"130","replacedBy":"149"},{"ruleId":"132","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":118,"column":6,"nodeType":"153","endLine":118,"endColumn":20,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":149,"column":6,"nodeType":"153","endLine":149,"endColumn":14,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"157","line":162,"column":6,"nodeType":"153","endLine":162,"endColumn":20,"suggestions":"158"},{"ruleId":"130","replacedBy":"159"},{"ruleId":"132","replacedBy":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'theme' is defined but never used.","Identifier","unusedVar","'pxToVh' is defined but never used.","'InputBase' is defined but never used.","'OutlinedInput' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["161"],["162"],"'Paper' is defined but never used.","'classes' is assigned a value but never used.",["161"],["162"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'editInv' and 'responseData'. Either include them or remove the dependency array. You can also do a functional update 'setEditInv(e => ...)' if you only need 'editInv' in the 'setEditInv' call.","ArrayExpression",["163"],"React Hook useEffect has missing dependencies: 'dispatch', 'page', and 'params'. Either include them or remove the dependency array. You can also do a functional update 'setPage(p => ...)' if you only need 'page' in the 'setPage' call.",["164"],"React Hook React.useEffect has a missing dependency: 'newData'. Either include it or remove the dependency array.",["165"],["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [editInv, responseData, selectedData]",{"range":"172","text":"173"},"Update the dependencies array to be: [dispatch, doc_id, page, params]",{"range":"174","text":"175"},"Update the dependencies array to be: [newData, selectedData]",{"range":"176","text":"177"},[3548,3562],"[editInv, responseData, selectedData]",[4511,4519],"[dispatch, doc_id, page, params]",[4793,4807],"[newData, selectedData]"]